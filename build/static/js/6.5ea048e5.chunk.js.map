{"version":3,"sources":["components/users/Login.js"],"names":["Login","props","dispatch","useDispatch","useState","username","password","user","setUser","errors","setErrors","networkError","setNetworkError","loginResult","useSelector","state","login","useEffect","length","history","push","onChangeInputHandler","e","fieldName","target","name","fieldValue","value","prevState","className","type","onChange","placeholder","aria-label","onClick","preventDefault","isValid","validateForm"],"mappings":"6MAKe,SAASA,EAAOC,GAE3B,IAAMC,EAAWC,cAFiB,EAIVC,mBAAS,CAACC,SAAS,GAAIC,SAAS,KAJtB,mBAI3BC,EAJ2B,KAIrBC,EAJqB,OAKNJ,mBAAS,CAACC,SAAS,GAAIC,SAAS,KAL1B,mBAK3BG,EAL2B,KAKnBC,EALmB,OAMMN,mBAAS,IANf,mBAM3BO,EAN2B,KAMbC,EANa,KAQ1BC,EAAgBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAA3CH,YAERI,qBAAU,WAEJJ,EAAYK,OAAS,EACnBjB,EAAMkB,QAAQC,KAAK,KAEnBR,EAAgB,qCAErB,CAACC,IAEJ,IAAMQ,EAAuB,SAACC,GAC1B,IAAMC,EAAYD,EAAEE,OAAOC,KACrBC,EAAaJ,EAAEE,OAAOG,MAC5BnB,GAAQ,SAAAoB,GAAS,kCAASA,GAAT,kBAAqBL,EAAYG,OAElDd,EAAgB,KA8BpB,OACI,yBAAKiB,UAAU,wBACO,KAAjBlB,GACG,yBAAKkB,UAAU,kBAAkBlB,GAGrC,8BACI,yBAAKkB,UAAU,iBACX,6BACI,2BACAC,KAAK,OACLH,MAAOpB,EAAKF,SACZ0B,SAAUV,EACVW,YAAY,WACZP,KAAK,WACLQ,aAAW,aAEVxB,EAAOJ,UACJ,yBAAKwB,UAAU,kBAAkBpB,EAAOJ,WAIhD,6BACI,2BACAyB,KAAK,WACLH,MAAOpB,EAAKD,SACZyB,SAAUV,EACVW,YAAY,WACZP,KAAK,WACLQ,aAAW,aAEVxB,EAAOH,UACJ,yBAAKuB,UAAU,kBAAkBpB,EAAOH,WAIhD,4BAAQuB,UAAU,wBAAwBC,KAAK,SAASI,QA/DnD,SAACZ,GAClBA,EAAEa,kBAEoB,IAK1B,WACI,IAAIC,GAAU,EACO,KAAlB7B,EAAKF,UACJK,GAAU,SAAAkB,GAAS,kCAASA,GAAT,IAAoBvB,SAAU,8BACjD+B,GAAU,GAEV1B,GAAU,SAAAkB,GAAS,kCAASA,GAAT,IAAoBvB,SAAU,QAGhC,KAAlBE,EAAKD,UACJI,GAAU,SAAAkB,GAAS,kCAASA,GAAT,IAAoBtB,SAAU,8BACjD8B,GAAU,GAEV1B,GAAU,SAAAkB,GAAS,kCAASA,GAAT,IAAoBtB,SAAU,QAGrD,OAAO8B,EArBJC,IACCnC,EAASc,YAAMT,MA2DP","file":"static/js/6.5ea048e5.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {login} from \"../../actions/login\";\r\n\r\n\r\nexport default function Login (props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [user, setUser] = useState({username:\"\", password:\"\"});\r\n    const [errors, setErrors] = useState({username:\"\", password:\"\"});\r\n    const [networkError, setNetworkError] = useState(\"\");\r\n\r\n    const { loginResult } = useSelector(state => state.login);\r\n\r\n    useEffect(()=>{\r\n\r\n       if(loginResult.length > 0) {        \r\n            props.history.push('/');      \r\n       } else {\r\n            setNetworkError(\"Incorrect username or password.\");\r\n       }\r\n    }, [loginResult]);\r\n\r\n    const onChangeInputHandler = (e) =>{\r\n        const fieldName = e.target.name;\r\n        const fieldValue = e.target.value;\r\n        setUser(prevState => ({...prevState, [fieldName]: fieldValue}));\r\n\r\n        setNetworkError(\"\");\r\n    }\r\n\r\n    const loginHandler = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(validateForm() === true) {\r\n            dispatch(login(user));\r\n        }\r\n    }\r\n\r\n    function validateForm(){\r\n        let isValid = true;\r\n        if(user.username === '') {\r\n            setErrors(prevState => ({...prevState, username: \"Please enter username.\"}));\r\n            isValid = false;\r\n        } else {\r\n            setErrors(prevState => ({...prevState, username: \"\"}));\r\n        }\r\n\r\n        if(user.password === '') {\r\n            setErrors(prevState => ({...prevState, password: \"Please enter password.\"}));\r\n            isValid = false;\r\n        } else {\r\n            setErrors(prevState => ({...prevState, password: \"\"}));\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-form-container\">\r\n            {networkError !== '' && \r\n                <div className=\"input-feedback\">{networkError}</div>\r\n             }\r\n\r\n            <form>\t\t\t\t\t\r\n                <div className=\"form-controls\">\r\n                    <div>\r\n                        <input \r\n                        type=\"text\" \r\n                        value={user.username} \r\n                        onChange={onChangeInputHandler} \r\n                        placeholder=\"Username\" \r\n                        name=\"username\" \r\n                        aria-label=\"Username\"\r\n                        />\r\n                        {errors.username && (\r\n                            <div className=\"input-feedback\">{errors.username}</div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input \r\n                        type=\"password\" \r\n                        value={user.password} \r\n                        onChange={onChangeInputHandler} \r\n                        placeholder=\"Password\" \r\n                        name=\"password\" \r\n                        aria-label=\"Password\"\r\n                        />\r\n                        {errors.password && (\r\n                            <div className=\"input-feedback\">{errors.password}</div>\r\n                        )}\r\n                    </div>\r\n                    \r\n                    <button className=\"button--primary login\" type=\"submit\" onClick={loginHandler}>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}