{"version":3,"sources":["components/products/ProductItem.js","components/products/Filter.js","components/products/Index.js"],"names":["ProductItem","props","dispatch","useDispatch","cartCount","useSelector","state","products","StyledSpan","styled","span","product","colour","color","className","src","image","alt","title","discount","length","substr","concat","brand","Number","price","final_price","toFixed","onClick","e","addToCart","Filter","useState","minPrice","setMinPrice","maxPrice","setMaxPrice","colours","setColours","brands","setBrands","discounts","setDiscounts","productList","selectedColors","selectedBrands","minSelectedDiscount","maxSelectedDiscount","minSelectedPrice","maxSelectedPrice","useEffect","_colours","_brands","_disounts","forEach","element","push","Set","Object","entries","i","axios","get","then","res","data","_minPrice","values","filter","item","key","_maxPrice","onChangeDiscount","range","event","console","log","target","value","isNaN","selectMinDiscount","selectMaxDiscount","onChangePrice","selectMinPrice","selectMaxPrice","resetFilters","map","type","onChange","_selectedColors","index","indexOf","splice","selectColors","checked","brandName","_selectedBrands","selectBrands","name","aria-label","displayValue","Products","getAllProducts","id"],"mappings":"+UAiDeA,MA5Cf,SAAsBC,GAElB,IAAMC,EAAWC,cACTC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAzCH,UAEFI,EAAaC,IAAOC,KAAV,IACQT,EAAMU,QAAQC,OAAOC,OAS7C,OACQ,yBAAKC,UAAU,WACX,yBAAKA,UAAU,iBACX,yBAAKC,IAAKd,EAAMU,QAAQK,MAAOC,IAAKhB,EAAMU,QAAQO,QACjDjB,EAAMU,QAAQQ,SAAW,GAC1B,0BAAML,UAAU,oBAAhB,IAAqCb,EAAMU,QAAQQ,SAAnD,OAGJ,yBAAKL,UAAU,mBACX,yBAAKA,UAAU,uBACX,wBAAIA,UAAU,gBACTb,EAAMU,QAAQO,MAAME,OAAS,GAC9BnB,EAAMU,QAAQO,MAAMG,OAAO,EAAG,IAAIC,OAAO,OACvCrB,EAAMU,QAAQO,OAEpB,wBAAIJ,UAAU,iBAAiBb,EAAMU,QAAQY,OAC7C,0BAAMT,UAAU,iBAAhB,OAAqCU,OAAOvB,EAAMU,QAAQc,MAAMC,aAAaC,QAAQ,KAGzF,yBAAKb,UAAU,wBACX,kBAACN,EAAD,MACA,4BAAQM,UAAU,kBAAkBc,QAzB/B,SAACC,GACtB3B,EAAS4B,YAAU1B,EAAU,MAwBb,mB,mCCyNT2B,MA5Pf,SAAiB9B,GAEb,IAAMC,EAAWC,cAFG,EAIY6B,mBAAS,IAJrB,mBAIbC,EAJa,KAIHC,EAJG,OAKYF,mBAAS,IALrB,mBAKbG,EALa,KAKHC,EALG,OAOUJ,mBAAS,IAPnB,mBAObK,EAPa,KAOJC,EAPI,OAQQN,mBAAS,IARjB,mBAQbO,EARa,KAQLC,EARK,OAScR,mBAAS,IATvB,mBASbS,EATa,KASFC,EATE,OAiBMrC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAN7CoC,EAXY,EAWZA,YACJC,EAZgB,EAYhBA,eACAC,EAbgB,EAahBA,eACAC,EAdgB,EAchBA,oBACAC,EAfgB,EAehBA,oBACAC,EAhBgB,EAgBhBA,iBACAC,EAjBgB,EAiBhBA,iBAEJC,qBAAU,WACN,IAAMC,EAAW,GACXC,EAAU,GACVC,EAAY,GAClBV,EAAYW,SAAQ,SAACC,GACjBH,EAAQI,KAAKD,EAAQhC,OACrB4B,EAASI,EAAQ3C,OAAOC,OAAS0C,EAAQ3C,OAAOM,SAGpDsB,EAAU,YAAI,IAAIiB,IAAIL,KACtBd,EAAWoB,OAAOC,QAAQR,IAG1B,IAAI,IAAIS,EAAG,GAAIA,EAAI,GAAIA,GAAG,GACtBP,EAAUG,KAAKI,GAEnBlB,EAAaW,KAEd,CAACV,IAGJO,qBAAU,WACNW,IAAMC,IAAI,4CACGC,MAAK,SAAAC,GACH,GAAGA,EAAIC,KAAK7C,QAAU4C,EAAIC,KAAK,GAAG,CAC7B,IAAMC,EAAaF,EAAIC,KAAK,GAAGE,OAAOC,QAAO,SAAAC,GAAI,MAAgB,QAAbA,EAAKC,OACnDC,EAAaP,EAAIC,KAAK,GAAGE,OAAOC,QAAO,SAAAC,GAAI,MAAgB,QAAbA,EAAKC,OACzDpC,EAAYgC,GACZ9B,EAAYmC,SAIjC,IAGJ,IA4BOC,EAAmB,SAACC,GAAD,OAAW,SAAAC,GAChCC,QAAQC,IAAIH,EAAOC,EAAMG,OAAOC,OACnB,QAAVL,GAAoBM,MAAML,EAAMG,OAAOC,QACtC5E,EAAS8E,YAAkBN,EAAMG,OAAOC,QAE/B,QAAVL,GAAoBM,MAAML,EAAMG,OAAOC,QACtC5E,EAAS+E,YAAkBP,EAAMG,OAAOC,UAK1CI,EAAgB,SAACT,GAAD,OAAW,SAAAC,GAC7BC,QAAQC,IAAIH,EAAOC,EAAMG,OAAOC,OACnB,QAAVL,GAAoBM,MAAML,EAAMG,OAAOC,QACtC5E,EAASiF,YAAeT,EAAMG,OAAOC,QAE5B,QAAVL,GAAoBM,MAAML,EAAMG,OAAOC,QACtC5E,EAASkF,YAAeV,EAAMG,OAAOC,UAmB7C,OACI,yBAAKhE,UAAU,qBACV,yBAAKA,UAAU,kBAAiB,uCAAhC,IAAiD,4BAAQc,QAf7C,SAAA8C,GACtBxE,EAASmF,gBAciFvE,UAAU,gBAAzC,WACjD,8BACG,yBAAKA,UAAU,gBAAe,sCAC1B,4BACKuB,GACGA,EAAQiD,KAAI,gBAzDbzE,EAyDa,mBAAEyD,EAAF,KAAOQ,EAAP,YACR,wBAAIR,IAAKA,GACL,+BACI,2BACIiB,KAAK,WACLT,MAAOR,EACPkB,UA/DjB3E,EA+DyCiE,EA/D/B,SAAAJ,GAE7B,IAAMe,EAAkB7C,EAClB8C,EAAQD,EAAgBE,QAAQ9E,IACxB,IAAX6E,EACCD,EAAgBjC,KAAK3C,GAErB4E,EAAgBG,OAAQF,EAAO,GAGnCxF,EAAS2F,YAAa,YAAI,IAAIpC,IAAIgC,QAsDEK,WAASlD,IAAqD,IAAnCA,EAAe+C,QAAQb,MAEtD,8BAAOA,UAQ3B,yBAAKhE,UAAU,gBAAe,qCAC1B,4BACKyB,GACGA,EAAO+C,KAAI,SAAC/D,GAAD,OACP,wBAAI+C,IAAK/C,GACL,+BACI,2BACIgE,KAAK,WACLT,MAAOvD,EACPiE,UAjGtBO,EAiG8CxE,EAjGhC,SAAAmD,GAEhC,IAAMsB,EAAkBnD,EAClB6C,EAAQM,EAAgBL,QAAQI,IACxB,IAAXL,EACCM,EAAgBxC,KAAKuC,GAErBC,EAAgBJ,OAAQF,EAAO,GAGnCxF,EAAS+F,YAAa,YAAI,IAAIxC,IAAIuC,QAwFMF,WAASjD,IAAqD,IAAnCA,EAAe8C,QAAQpE,MAEtD,8BAAOA,KApG1B,IAACwE,OA4GN,yBAAKjF,UAAU,gBACV,qCACD,yBAAKA,UAAU,qBACX,4BACrBoF,KAAK,YACLC,aAAW,gBACXX,SAAUN,EAAc,OACxBJ,MAAO9B,GAEmBf,EAASqD,KAAI,SAAAjB,GAAI,OACV,4BACAS,MAAOT,EAAKC,IACZA,IAAG,cAASD,EAAKC,KACjBkB,SAAU,SAAC3D,GAAD,OAAKqD,EAAc,SAExBb,EAAK+B,kBAMtB,4BACrBF,KAAK,YACLC,aAAW,gBACXX,SAAUN,EAAc,OACxBJ,MAAO7B,GAAsC,OAEpB,4BAAQ6B,MAAM,MAAMR,IAAI,OAAxB,OACCnC,EAASmD,KAAI,SAAAjB,GAAI,OACV,4BACAS,MAAOT,EAAKC,IACZA,IAAG,cAASD,EAAKC,MAGZD,EAAK+B,oBAS9B,yBAAKtF,UAAU,kCACZ,wCACK,yBAAKA,UAAU,qBACX,4BACxBoF,KAAK,eACLC,aAAW,mBACXX,SAAUhB,EAAiB,OAC3BM,MAAOhC,GAA4C,GAEvB,4BAAQgC,MAAM,IAAIR,IAAI,OAAtB,OACC7B,EAAU6C,KAAI,SAAAjB,GAAI,OACX,4BACAS,MAAOT,EACPC,IAAG,cAASD,IAGRA,EALJ,SAWZ,4BACvB6B,KAAK,eACLC,aAAW,mBACXX,SAAUhB,EAAiB,OAC1BM,MAAO/B,GAEmB,4BAAQ+B,MAAOrC,EAAUA,EAAUrB,OAAO,GAAIkD,IAAI,OAAlD,OACC7B,EAAU6C,KAAI,SAAAjB,GAAI,OACX,4BACAS,MAAOT,EACPC,IAAG,cAASD,GACZmB,SAAUhB,EAAiB,QAEvBH,EALJ,c,OC9M7BgC,UA5Bf,SAAmBpG,GAAQ,IAEf0C,EAAgBtC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAA3CoC,YAEFzC,EAAWC,cASjB,OAPA+C,qBAAU,WACZyB,QAAQC,IAAI,oBACL1E,EAASoG,iBACX,IAKC,oCACI,kBAAC,EAAD,MACA,yBAAKxF,UAAU,qBACV6B,EAAYvB,OAAS,EACtBuB,EAAY2C,KAAI,SAAA3E,GAAO,OACnB,kBAAC,EAAD,CAAa2D,IAAK3D,EAAQ4F,GAAI5F,QAASA,OAExC,yBAAKG,UAAU,cAAf","file":"static/js/4.0caf81ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport {  addToCart} from \"../../actions/products\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from 'styled-components';\r\n\r\nfunction ProductItem (props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cartCount } = useSelector(state => state.products);\r\n\r\n    const StyledSpan = styled.span`\r\n        background-color: ${props.product.colour.color};\r\n        width: 12px;\r\n        height: 12px;\r\n        `;\r\n   \r\n    const addToCartHandler = (e) => {\r\n        dispatch(addToCart(cartCount+1));\r\n    }\r\n\r\n    return(\t\t\t\t\r\n            <div className=\"product\">\r\n                <div className=\"product-image\">\r\n                    <img src={props.product.image} alt={props.product.title} />\r\n                    {props.product.discount > 0 &&\r\n                    <span className=\"product-discount\"> {props.product.discount }% </span>\r\n                    }\r\n                </div>\r\n                <div className=\"product-details\">\r\n                    <div className=\"product-left-column\">\r\n                        <h3 className=\"product-name\">\r\n                            {props.product.title.length > 25 ?\r\n                            props.product.title.substr(0, 25).concat('...')\r\n                            : props.product.title}\r\n                            </h3>\r\n                        <h3 className=\"product-brand\">{props.product.brand}</h3>\r\n                        <span className=\"product-price\">Rs. {Number(props.product.price.final_price).toFixed(2)}</span>                  \r\n                    </div>\r\n\r\n                    <div className=\"product-right-column\">\r\n                        <StyledSpan />\r\n                        <button className=\"button--primary\" onClick={addToCartHandler} >Add To Cart</button>                 \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProductItem;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectBrands, selectColors, selectMinDiscount, selectMaxDiscount, selectMinPrice, selectMaxPrice, resetFilters } from \"../../actions/products\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Filter (props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [minPrice, setMinPrice] = useState([]);\r\n    const [maxPrice, setMaxPrice] = useState([]);\r\n\r\n    const [colours, setColours] = useState([]);\r\n    const [brands, setBrands] = useState([]);\r\n    const [discounts, setDiscounts] = useState([]);\r\n\r\n    const { productList, \r\n        selectedColors, \r\n        selectedBrands, \r\n        minSelectedDiscount, \r\n        maxSelectedDiscount,\r\n        minSelectedPrice,\r\n        maxSelectedPrice  } = useSelector(state => state.products);\r\n\r\n    useEffect(()=>{\r\n        const _colours = {};\r\n        const _brands = [];\r\n        const _disounts = [];\r\n        productList.forEach((element) => {\r\n            _brands.push(element.brand);\r\n            _colours[element.colour.color] = element.colour.title;\r\n        });\r\n\r\n        setBrands([...new Set(_brands)]);\r\n        setColours(Object.entries(_colours));\r\n        \r\n        //Min and Max discounts\r\n        for(let i= 10; i < 90; i+=10){\r\n            _disounts.push(i);\r\n        }\r\n        setDiscounts(_disounts);\r\n\r\n    }, [productList]);\r\n\r\n\r\n    useEffect(()=>{\r\n        axios.get('https://xebiascart.herokuapp.com/filters')\r\n                    .then(res => {\r\n                       if(res.data.length && res.data[2]){\r\n                            const _minPrice =  res.data[2].values.filter(item=> item.key !== 'Max');\r\n                            const _maxPrice =  res.data[2].values.filter(item=> item.key !== 'Min');\r\n                            setMinPrice(_minPrice);\r\n                            setMaxPrice(_maxPrice);\r\n                       }\r\n                     })\r\n\r\n    }, []);\r\n\r\n\r\n   const onChangeBrand = (brandName) => event => {\r\n\r\n        const _selectedBrands = selectedBrands;\r\n        const index = _selectedBrands.indexOf(brandName);\r\n        if(index === -1){  \r\n            _selectedBrands.push(brandName); \r\n        } else {\r\n            _selectedBrands.splice( index, 1 );\r\n        }\r\n\r\n        dispatch(selectBrands([...new Set(_selectedBrands)]));\r\n\r\n    }\r\n\r\n    const onChangeColor = (color) => event => {\r\n\r\n        const _selectedColors = selectedColors;\r\n        const index = _selectedColors.indexOf(color);\r\n        if(index === -1){  \r\n            _selectedColors.push(color); \r\n        } else {\r\n            _selectedColors.splice( index, 1 );\r\n        }\r\n        \r\n        dispatch(selectColors([...new Set(_selectedColors)]));\r\n    }\r\n\r\n\r\n    const onChangeDiscount = (range) => event => {\r\n        console.log(range, event.target.value)\r\n        if(range === 'min' && !isNaN(event.target.value) ){\r\n            dispatch(selectMinDiscount(event.target.value));\r\n        }\r\n        if(range === 'max' && !isNaN(event.target.value) ){\r\n            dispatch(selectMaxDiscount(event.target.value));\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangePrice = (range) => event => {\r\n        console.log(range, event.target.value)\r\n        if(range === 'min' && !isNaN(event.target.value) ){\r\n            dispatch(selectMinPrice(event.target.value));\r\n        }\r\n        if(range === 'max' && !isNaN(event.target.value) ){\r\n            dispatch(selectMaxPrice(event.target.value));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const resetHandler = event => {\r\n\t\t dispatch(resetFilters());\r\n        /*dispatch(selectBrands([]));\r\n        dispatch(selectColors([]));\r\n        dispatch(selectMinDiscount(0));\r\n        dispatch(selectMaxDiscount(0));\r\n        dispatch(selectMinPrice(0));\r\n        dispatch(selectMaxPrice(0)); */\r\n\r\n    }\r\n    \r\n    \r\n    \r\n    return(\r\n        <div className=\"filters-container\">\t\r\n             <div className=\"filters-header\"><h3>Filters</h3> <button onClick={resetHandler} className=\"reset-button\">Reset </button></div>\t\t\t\t\r\n             <form>\t\t\t\t\t\r\n                <div className=\"filters-item\"><h4>Colour</h4>\r\n                    <ul>\r\n                        {colours &&\r\n                            colours.map(([key, value]) =>\r\n                                <li key={key}>\r\n                                    <label>                                      \r\n                                        <input \r\n                                            type=\"checkbox\" \r\n                                            value={key}\r\n                                            onChange={onChangeColor(value)}  \r\n                                            checked={selectedColors && selectedColors.indexOf(value) !== -1?true:false}\r\n                                       />\r\n                                        <span>{value}</span>\r\n                                    </label>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul> \r\n                    </div>\r\n\r\n                    <div className=\"filters-item\"><h4>Brand</h4>\r\n                        <ul>\r\n                            {brands &&\r\n                                brands.map((brand) =>\r\n                                    <li key={brand}>\r\n                                        <label>\r\n                                            <input \r\n                                                type=\"checkbox\" \r\n                                                value={brand}\r\n                                                onChange={onChangeBrand(brand)} \r\n                                                checked={selectedBrands && selectedBrands.indexOf(brand) !== -1?true:false}\r\n                                            />\r\n                                            <span>{brand}</span>\r\n                                        </label>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        </ul> \r\n                    </div>\r\n\r\n                    <div className=\"filters-item\">\r\n                         <h4>Price</h4>\r\n                        <div className=\"dropldown-filters\">\r\n                            <select \r\n\t\t\t\t\t\t\tname=\"min_price\" \r\n\t\t\t\t\t\t\taria-label=\"minimum price\" \r\n\t\t\t\t\t\t\tonChange={onChangePrice('min')}\r\n\t\t\t\t\t\t\tvalue={minSelectedPrice}\r\n\t\t\t\t\t\t\t>\r\n                                {minPrice.map(item =>                                 \r\n                                        <option \r\n                                        value={item.key}  \r\n                                        key={`min-${item.key}`} \r\n                                        onChange={(e)=>onChangePrice('min')}\r\n                                        >\r\n                                            {item.displayValue}\r\n                                        </option>\r\n                                           \r\n                                    )\r\n                                }\r\n                            </select>\r\n                            <select \r\n\t\t\t\t\t\t\tname=\"max_price\" \r\n\t\t\t\t\t\t\taria-label=\"maximum price\"  \r\n\t\t\t\t\t\t\tonChange={onChangePrice('max')}\r\n\t\t\t\t\t\t\tvalue={maxSelectedPrice ? maxSelectedPrice : 'Max' }\r\n\t\t\t\t\t\t\t>\r\n                                <option value=\"Max\" key=\"max\">Max</option>\r\n                                {maxPrice.map(item =>\r\n                                        <option \r\n                                        value={item.key}  \r\n                                        key={`min-${item.key}`} \r\n                                        \r\n                                        >\r\n                                            {item.displayValue}\r\n                                        </option>\r\n                                    )\r\n                                }\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"filters-item dropldown-filters\">\r\n                       <h4>Discount</h4>\r\n                            <div className=\"dropldown-filters\">\r\n                                <select \r\n\t\t\t\t\t\t\t\tname=\"min_discount\" \r\n\t\t\t\t\t\t\t\taria-label=\"minimum discount\"  \r\n\t\t\t\t\t\t\t\tonChange={onChangeDiscount('min')}\r\n\t\t\t\t\t\t\t\tvalue={minSelectedDiscount ? minSelectedDiscount : 0 }\r\n\t\t\t\t\t\t\t\t>\r\n                                    <option value=\"0\" key=\"min\">Min</option>\r\n                                    {discounts.map(item =>\r\n                                            <option \r\n                                            value={item} \r\n                                            key={`min-${item}`} \r\n                                            \r\n                                            >\r\n                                               {item}%\r\n                                            </option>\r\n\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                                <select \r\n\t\t\t\t\t\t\t\t\tname=\"max_discount\" \r\n\t\t\t\t\t\t\t\t\taria-label=\"maximum discount\"  \r\n\t\t\t\t\t\t\t\t\tonChange={onChangeDiscount('max')}\r\n\t\t\t\t\t\t\t\t\t value={maxSelectedDiscount}\r\n\t\t\t\t\t\t\t\t>\r\n                                    <option value={discounts[discounts.length-1]} key=\"max\">Max</option>\r\n                                    {discounts.map(item =>\r\n                                            <option \r\n                                            value={item} \r\n                                            key={`min-${item}`} \r\n                                            onChange={onChangeDiscount('max')}\r\n                                            >\r\n                                               {item}%\r\n                                            </option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                    </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, {useEffect} from 'react';\r\nimport { getAllProducts} from \"../../actions/products\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ProductItem from './ProductItem.js';\r\nimport Filter from './Filter.js';\r\nimport './product.scss';\r\n\r\nfunction Products (props) {\r\n\r\n    const { productList } = useSelector(state => state.products);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n\t\tconsole.log(\"get all products\");\r\n         dispatch(getAllProducts());\r\n    }, []);\r\n\r\n\r\n\r\n    return(\t\r\n        <>\r\n            <Filter  />\t\t\r\n            <div className=\"product-container\">\r\n                {productList.length > 0 ?\r\n                productList.map(product => \r\n                    <ProductItem key={product.id} product={product} />\r\n                )\r\n                :  <div className=\"no-results\" >No results found.</div>\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Products;"],"sourceRoot":""}